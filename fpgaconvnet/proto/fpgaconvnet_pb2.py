# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: fpgaconvnet.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11\x66pgaconvnet.proto\x12\x0b\x66pgaconvnet\"2\n\x0b\x66ixed_point\x12\r\n\x05width\x18\x01 \x02(\x05\x12\x14\n\x0c\x62inary_point\x18\x02 \x02(\x05\"\x82\x01\n\x0cquant_format\x12)\n\x07scale_t\x18\x01 \x02(\x0b\x32\x18.fpgaconvnet.fixed_point\x12)\n\x07shift_t\x18\x02 \x02(\x0b\x32\x18.fpgaconvnet.fixed_point\x12\r\n\x05scale\x18\x03 \x03(\x02\x12\r\n\x05shift\x18\x04 \x03(\x05\"M\n\x06stream\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\x0e\n\x06\x63oarse\x18\x02 \x02(\x05\x12\x17\n\x0c\x62uffer_depth\x18\x03 \x02(\x05:\x01\x32\x12\x0c\n\x04node\x18\x04 \x01(\t\"\xe1\x0c\n\tparameter\x12\x12\n\nbatch_size\x18\x01 \x01(\x05\x12\x0f\n\x07rows_in\x18\x02 \x01(\x05\x12\x0f\n\x07\x63ols_in\x18\x03 \x01(\x05\x12\x10\n\x08\x64\x65pth_in\x18\x04 \x01(\x05\x12\x13\n\x0b\x63hannels_in\x18\x05 \x01(\x05\x12\x10\n\x08rows_out\x18\x06 \x01(\x05\x12\x10\n\x08\x63ols_out\x18\x07 \x01(\x05\x12\x11\n\tdepth_out\x18\x08 \x01(\x05\x12\x14\n\x0c\x63hannels_out\x18\t \x01(\x05\x12\x0e\n\x06\x63oarse\x18\n \x01(\x05\x12\x11\n\tcoarse_in\x18\x0b \x01(\x05\x12\x12\n\ncoarse_out\x18\x0c \x01(\x05\x12\x11\n\tmem_bw_in\x18\r \x01(\x02\x12\x12\n\nmem_bw_out\x18\x0e \x01(\x02\x12(\n\x06\x64\x61ta_t\x18\x0f \x01(\x0b\x32\x18.fpgaconvnet.fixed_point\x12)\n\x07input_t\x18\x10 \x01(\x0b\x32\x18.fpgaconvnet.fixed_point\x12*\n\x08output_t\x18\x11 \x01(\x0b\x32\x18.fpgaconvnet.fixed_point\x12.\n\x0binput_quant\x18\x12 \x01(\x0b\x32\x19.fpgaconvnet.quant_format\x12/\n\x0coutput_quant\x18\x13 \x01(\x0b\x32\x19.fpgaconvnet.quant_format\x12\x15\n\rstream_inputs\x18\x14 \x03(\x08\x12\x16\n\x0estream_outputs\x18\x15 \x03(\x08\x12\x16\n\x08use_uram\x18\x16 \x01(\x08:\x04true\x12\x10\n\x08ports_in\x18\x32 \x01(\x05\x12\x11\n\tports_out\x18\x33 \x01(\x05\x12\x15\n\rrows_in_array\x18\x34 \x03(\x05\x12\x15\n\rcols_in_array\x18\x35 \x03(\x05\x12\x16\n\x0e\x64\x65pth_in_array\x18\x36 \x03(\x05\x12\x19\n\x11\x63hannels_in_array\x18\x37 \x03(\x05\x12\x16\n\x0erows_out_array\x18\x38 \x03(\x05\x12\x16\n\x0e\x63ols_out_array\x18\x39 \x03(\x05\x12\x17\n\x0f\x64\x65pth_out_array\x18: \x03(\x05\x12\x1a\n\x12\x63hannels_out_array\x18; \x03(\x05\x12\x17\n\x0fmem_bw_in_array\x18< \x03(\x02\x12\x18\n\x10mem_bw_out_array\x18= \x03(\x02\x12\x0f\n\x07pad_top\x18h \x01(\x05\x12\x11\n\tpad_right\x18i \x01(\x05\x12\x12\n\npad_bottom\x18j \x01(\x05\x12\x10\n\x08pad_left\x18k \x01(\x05\x12\x11\n\tpad_front\x18l \x01(\x05\x12\x10\n\x08pad_back\x18m \x01(\x05\x12\x13\n\x0bkernel_rows\x18n \x01(\x05\x12\x13\n\x0bkernel_cols\x18o \x01(\x05\x12\x14\n\x0ckernel_depth\x18p \x01(\x05\x12\x13\n\x0bkernel_size\x18q \x03(\x05\x12\x13\n\x0bstride_rows\x18r \x01(\x05\x12\x13\n\x0bstride_cols\x18s \x01(\x05\x12\x14\n\x0cstride_depth\x18t \x01(\x05\x12\x0e\n\x06stride\x18u \x03(\x05\x12\x10\n\x07\x66ilters\x18\x96\x01 \x01(\x05\x12\x0f\n\x06groups\x18\x97\x01 \x01(\x05\x12\r\n\x04\x66ine\x18\x98\x01 \x01(\x05\x12\x15\n\x0c\x63oarse_group\x18\x99\x01 \x01(\x05\x12+\n\x08weight_t\x18\x9a\x01 \x01(\x0b\x32\x18.fpgaconvnet.fixed_point\x12(\n\x05\x61\x63\x63_t\x18\x9b\x01 \x01(\x0b\x32\x18.fpgaconvnet.fixed_point\x12)\n\x06\x62ias_t\x18\x9c\x01 \x01(\x0b\x32\x18.fpgaconvnet.fixed_point\x12\x30\n\x0cweight_quant\x18\x9d\x01 \x01(\x0b\x32\x19.fpgaconvnet.quant_format\x12.\n\nbias_quant\x18\x9e\x01 \x01(\x0b\x32\x19.fpgaconvnet.quant_format\x12\x17\n\x0estream_weights\x18\x9f\x01 \x01(\x05\x12\x1b\n\x12on_chip_addr_range\x18\xa0\x01 \x01(\x05\x12\x1d\n\x14off_chip_buffer_size\x18\xa1\x01 \x01(\x05\x12\x1a\n\x11off_chip_interval\x18\xa2\x01 \x01(\x05\x12\x11\n\x08sparsity\x18\xa3\x01 \x01(\x02\x12\x11\n\x08has_bias\x18\xa4\x01 \x01(\x08\x12\x1d\n\x14\x62lock_floating_point\x18\xa5\x01 \x01(\x08\x12\x0e\n\x05split\x18\xc8\x01 \x03(\x05\"\x88\x02\n\x05layer\x12\x0c\n\x04name\x18\x01 \x02(\t\x12\x11\n\tonnx_node\x18\x02 \x02(\t\x12%\n\x04type\x18\x03 \x02(\x0e\x32\x17.fpgaconvnet.layer_type\x12\x0f\n\x07op_type\x18\x04 \x01(\t\x12\'\n\nstreams_in\x18\x05 \x03(\x0b\x32\x13.fpgaconvnet.stream\x12(\n\x0bstreams_out\x18\x06 \x03(\x0b\x32\x13.fpgaconvnet.stream\x12\x14\n\x0cweights_path\x18\x07 \x01(\t\x12\x11\n\tbias_path\x18\x08 \x01(\t\x12*\n\nparameters\x18\t \x02(\x0b\x32\x16.fpgaconvnet.parameter\"\xe4\x01\n\tpartition\x12\n\n\x02id\x18\x01 \x02(\x05\x12\r\n\x05ports\x18\x02 \x02(\x05\x12\x12\n\nbatch_size\x18\x03 \x02(\x05\x12\x13\n\x0binput_nodes\x18\x04 \x03(\t\x12\x14\n\x0coutput_nodes\x18\x05 \x03(\t\x12 \n\x18weights_reloading_factor\x18\x06 \x02(\x05\x12\x1f\n\x17weights_reloading_layer\x18\x07 \x02(\t\x12\x16\n\x0egen_last_width\x18\x08 \x01(\x05\x12\"\n\x06layers\x18\t \x03(\x0b\x32\x12.fpgaconvnet.layer\"7\n\npartitions\x12)\n\tpartition\x18\x01 \x03(\x0b\x32\x16.fpgaconvnet.partition*\xb9\x01\n\nlayer_type\x12\x0f\n\x0b\x43ONVOLUTION\x10\x00\x12\x0b\n\x07POOLING\x10\x01\x12\x0e\n\nACTIVATION\x10\x02\x12\x0b\n\x07SQUEEZE\x10\x03\x12\x11\n\rINNER_PRODUCT\x10\x04\x12\n\n\x06\x43ONCAT\x10\x05\x12\x0e\n\nBATCH_NORM\x10\x06\x12\t\n\x05SPLIT\x10\x07\x12\x0b\n\x07\x45LTWISE\x10\x08\x12\x13\n\x0f\x41VERAGE_POOLING\x10\t\x12\n\n\x06RESIZE\x10\n\x12\x08\n\x04\x43HOP\x10\x0b')

_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, globals())
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'fpgaconvnet_pb2', globals())
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _LAYER_TYPE._serialized_start=2490
  _LAYER_TYPE._serialized_end=2675
  _FIXED_POINT._serialized_start=34
  _FIXED_POINT._serialized_end=84
  _QUANT_FORMAT._serialized_start=87
  _QUANT_FORMAT._serialized_end=217
  _STREAM._serialized_start=219
  _STREAM._serialized_end=296
  _PARAMETER._serialized_start=299
  _PARAMETER._serialized_end=1932
  _LAYER._serialized_start=1935
  _LAYER._serialized_end=2199
  _PARTITION._serialized_start=2202
  _PARTITION._serialized_end=2430
  _PARTITIONS._serialized_start=2432
  _PARTITIONS._serialized_end=2487
# @@protoc_insertion_point(module_scope)
