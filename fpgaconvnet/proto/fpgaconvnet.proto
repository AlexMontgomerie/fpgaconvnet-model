syntax = "proto2";

message fixed_point {
    required int32 width = 1;
    required int32 binary_point = 2;
}

message quant_format {
    required float scale = 1;
    required int32 zero_point = 2;
}

message stream {
    required string name = 1;
    required int32  coarse = 2;
    required int32  buffer_depth = 3 [default = 2];
    optional string node = 4;
}

message parameter {
    optional int32 buffer_depth = 1 [default = 2];
    optional int32 batch_size   = 2;
    optional int32 rows_in      = 3;
    optional int32 cols_in      = 4;
    optional int32 depth_in     = 5;
    optional int32 channels_in  = 6;
    optional int32 rows_out     = 7;
    optional int32 cols_out     = 8;
    optional int32 depth_out    = 9;
    optional int32 channels_out = 10;
    optional int32 coarse_in    = 11;
    optional int32 coarse_out   = 12;
    optional int32 coarse       = 13;
    optional int32 coarse_group = 14;
    optional int32 groups       = 15;
    optional int32 fine         = 16;
    optional int32 filters      = 17;
    optional int32 pad_top      = 18;
    optional int32 pad_right    = 19;
    optional int32 pad_front    = 20;
    optional int32 pad_bottom   = 21;
    optional int32 pad_left     = 22;
    optional int32 pad_back     = 23;
    optional int32 kernel_rows  = 24;
    optional int32 kernel_cols  = 25;
    optional int32 kernel_depth = 26;
    optional int32 stride_rows  = 27;
    optional int32 stride_cols  = 28;
    optional int32 stride_depth = 29;
    optional fixed_point data_t     = 30;
    optional fixed_point weight_t   = 31;
    optional fixed_point acc_t      = 32;
    optional fixed_point input_t    = 33;
    optional fixed_point output_t   = 34;
    optional int32 has_bias     = 35;
    optional int32 biases_width = 36;
    optional int32 ports_in     = 37;
    optional int32 ports_out    = 38;
    repeated int32 rows_in_array        = 39;
    repeated int32 cols_in_array        = 40;
    repeated int32 depth_in_array       = 41;
    repeated int32 channels_in_array    = 42;
    repeated int32 rows_out_array       = 43;
    repeated int32 cols_out_array       = 44;
    repeated int32 depth_out_array      = 45;
    repeated int32 channels_out_array   = 46;
    optional quant_format input_quant   = 47;
    optional quant_format outnput_quant = 48;
    optional quant_format weight_quant  = 49;
    optional quant_format bias_quant    = 50;

}

message layer {
    required string name = 1;
    required string onnx_node = 2;
    required layer_type type = 3;
    repeated stream streams_in  = 4;
    repeated stream streams_out = 5;
    required parameter parameters = 6;

    enum layer_type {
        CONVOLUTION     = 0;
        POOLING         = 1;
        ACTIVATION      = 2;
        SQUEEZE         = 3;
        INNER_PRODUCT   = 4;
        CONCAT          = 5;
        BATCH_NORM      = 6;
        SPLIT           = 7;
        ELTWISE         = 8;
        AVERAGE_POOLING = 9;
    }

    optional string weights_path = 7;
    optional string bias_path    = 8;
}

message partition {
    required int32  id = 1;
    required int32  ports = 2;
    required int32  batch_size = 3;
    repeated string input_nodes = 4;
    repeated string output_nodes = 5;
    required int32  weights_reloading_factor = 6;
    required string weights_reloading_layer  = 7;

    repeated layer layers = 8;
}

message partitions {
    repeated partition partition = 1;
}

